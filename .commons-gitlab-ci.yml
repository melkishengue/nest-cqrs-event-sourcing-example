.test-node-app:
  image: node:16.13.2-alpine
  script:
    - npm install
    - npm test

.build-node-app:
  services:
   - name: docker:20.10.16-dind
     alias: dockerdaemon
  image: docker:20
  variables:
    # Tell docker CLI how to talk to Docker daemon.
    DOCKER_HOST: tcp://dockerdaemon:2375/
    # Use the overlayfs driver for improved performance.
    DOCKER_DRIVER: overlay2
    # Disable TLS since we're running inside local network.
    DOCKER_TLS_CERTDIR: ""
    # TAG_NAME: $DOCKER_HUB_REPO_ACCOUNT:$CI_COMMIT_REF_SLUG
  script:
    - docker info
    - echo $CI_REGISTRY_PASSWORD
    - echo $CI_REGISTRY_USER
    - >
      docker build
      --pull
      --cache-from $TAG_NAME
      --label "org.bankapp.image.title=$CI_PROJECT_TITLE"
      --label "org.bankapp.image.url=$CI_PROJECT_URL"
      --label "org.bankapp.image.created=$CI_JOB_STARTED_AT"
      --label "org.bankapp.image.revision=$CI_COMMIT_SHA"
      --label "org.bankapp.image.version=$CI_COMMIT_REF_NAME"
      --tag $TAG_NAME .
      
    - docker logout
    - echo -n $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker push $TAG_NAME

.deploy-node-app:
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  script:
    - echo $KUBECONFIG_FILE
    - cat $KUBECONFIG_FILE
    - kubectl --kubeconfig=$KUBECONFIG_FILE get nodes
    - kubectl --kubeconfig=$KUBECONFIG_FILE config view
    - kubectl --kubeconfig=$KUBECONFIG_FILE config get-contexts
    - kubectl --kubeconfig=$KUBECONFIG_FILE config current-context
    - kubectl --kubeconfig=$KUBECONFIG_FILE cluster-info
    - sed -i "s#<TAG_NAME>#$TAG_NAME#g" deployment.yaml
    - sed -i "s#<APP_NAME>#$APP_NAME#g" deployment.yaml
    - sed -i "s#<APP_PORT>#$PORT#g" deployment.yaml
    - cat deployment.yaml
    - kubectl --kubeconfig=$KUBECONFIG_FILE apply -f deployment.yaml
    - kubectl --kubeconfig=$KUBECONFIG_FILE get pods
    - kubectl --kubeconfig=$KUBECONFIG_FILE get services
    - kubectl --kubeconfig=$KUBECONFIG_FILE get nodes
